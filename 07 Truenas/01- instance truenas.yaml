AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Application Template: Demonstrates how to reference resources from a different stack.
  This template provisions an EC2 instance in a VPC Subnet provisioned in a different stack.

# This template creates:
#   Amazon EC2 instance
#   Security Group

######################
# Parameters section
######################

Parameters:

  NetworkStackName:
    Description: >-
      Name of an active CloudFormation stack that contains the networking
      resources, such as the VPC and subnet that will be used in this stack.
    Type: String
    MinLength: 1
    MaxLength: 255
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
#    Default: lab-network
    Default: MyCloud

  AmiTrueNasParam:
    Description: Select TrueNAS AMI (x86)
    Type: AWS::EC2::Image::Id
    Default: ami-0b29297d20ee25b3a
    ConstraintDescription: must be the ID of an existing AMI.

######################
# Resources section
######################

Resources:

  TrueNasInstance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.large
#      ImageId: !Ref AmazonLinuxAMIID
      ImageId: !Ref AmiTrueNasParam
      NetworkInterfaces:
        - GroupSet:
            - !Ref AppSecurityGroup
            - Fn::ImportValue:
                !Sub ${NetworkStackName}-AllTrafficSecurityGroup
          AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId:
            Fn::ImportValue:
              !Sub ${NetworkStackName}-SubnetID
      BlockDeviceMappings:
      - DeviceName: "/dev/sda1"
        Ebs:
          DeleteOnTermination: true
      Tags:
        - Key: Name
          Value: TrueNas1

  DiskVolume:
    Type: AWS::EC2::Volume
    Properties:
      Size: 100
      AvailabilityZone: !GetAtt TrueNasInstance1.AvailabilityZone
      Tags:
        - Key: Name
          Value: TrueNas Data
    #DeletionPolicy: Snapshot
    DeletionPolicy: Delete

  DiskMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref TrueNasInstance1
      VolumeId: !Ref DiskVolume
      Device: /dev/sdh

  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP and ssh ingress
      VpcId:
        Fn::ImportValue:
          !Sub ${NetworkStackName}-VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: App Security Group

######################
# Outputs section
######################

Outputs:
  URL:
    Description: URL of the sample website
    Value: !Sub 'http://${TrueNasInstance1.PublicDnsName}'

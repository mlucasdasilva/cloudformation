{
  "Description": "This template deploys a VPC, with a pair of public spread across two Availability Zones. It deploys an internet gateway, with a default route on the public subnets.",
  "Parameters": {
    "EnvironmentName": {
      "Description": "An environment name that is prefixed to resource names",
      "Type": "String",
      "Default": "MyCloud"
    },
    "VpcCIDR": {
      "Description": "Please enter the IP range (CIDR notation) for this VPC",
      "Type": "String",
      "Default": "10.192.0.0/16"
    },
    "PublicSubnet1CIDR": {
      "Description": "Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone",
      "Type": "String",
      "Default": "10.192.11.0/24"
    },
    "PublicSubnet2CIDR": {
      "Description": "Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone",
      "Type": "String",
      "Default": "10.192.12.0/24"
    },
    "PrivateSubnet1CIDR": {
      "Description": "Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone",
      "Type": "String",
      "Default": "10.192.13.0/24"
    },
    "PrivateSubnet2CIDR": {
      "Description": "Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone",
      "Type": "String",
      "Default": "10.192.14.0/24"
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "VpcCIDR"
        },
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "EnvironmentName"
            }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "EnvironmentName"
            }
          }
        ]
      }
    },
    "InternetGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PublicSubnet1CIDR"
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${EnvironmentName} Public Subnet (AZ1)"
            }
          }
        ]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PublicSubnet2CIDR"
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${EnvironmentName} Public Subnet (AZ2)"
            }
          }
        ]
      }
    },
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PrivateSubnet1CIDR"
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${EnvironmentName} Private Subnet (AZ1)"
            }
          }
        ]
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PrivateSubnet2CIDR"
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${EnvironmentName} Private Subnet (AZ2)"
            }
          }
        ]
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${EnvironmentName} Public Routes"
            }
          }
        ]
      }
    },
    "DefaultPublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "InternetGatewayAttachment",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet1"
        }
      }
    },
    "PublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet2"
        }
      }
    },
    "PrivateSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet1"
        }
      }
    },
    "PrivateSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet2"
        }
      }
    },
    "NoIngressSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "no-ingress-sg",
        "GroupDescription": "Security group with no ingress rule",
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "AllTrafficSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "AllTrafficSg",
        "GroupDescription": "SG allow all traffic",
        "SecurityGroupIngress": [
          {
            "Description": "All traffic inbound ip4 allowed",
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0",
            "FromPort": "0",
            "ToPort": "65535"
          },
          {
            "Description": "All traffic inbound ip6 allowed",
            "IpProtocol": "-1",
            "CidrIpv6": "::/0",
            "FromPort": "0",
            "ToPort": "65535"
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      }
    }
  },
  "Outputs": {
    "VPC": {
      "Description": "A reference to the created VPC",
      "Value": {
        "Ref": "VPC"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-VPCID" }
      }
    },
    "PublicSubnets": {
      "Description": "A list of the public subnets",
      "Value": {
        "Fn::Join": [
          ",",
          [
            {
              "Ref": "PublicSubnet1"
            },
            {
              "Ref": "PublicSubnet2"
            },
            {
              "Ref": "PrivateSubnet1"
            },
            {
              "Ref": "PrivateSubnet2"
            }
          ]
        ]
      }
    },

    "PublicSubnet1DefaultReference": {
      "Description": "A default name reference to the public subnet in the 1st Availability Zone",
      "Value": {
        "Ref": "PublicSubnet1"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-SubnetID" }
      }
    },
    "PublicSubnet1AZDefaultReference": {
      "Description": "A default name reference to the AZ of the public subnet in the 1st Availability Zone",
      "Value": {
        "Fn::GetAtt" : "PublicSubnet1.AvailabilityZone"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-AZID" }
      }
    },


    "PublicSubnet1": {
      "Description": "A reference to the public subnet in the 1st Availability Zone",
      "Value": {
        "Ref": "PublicSubnet1"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-PublicSubnet1ID" }
      }
    },
    "PublicSubnet2": {
      "Description": "A reference to the public subnet in the 2nd Availability Zone",
      "Value": {
        "Ref": "PublicSubnet2"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-PublicSubnet2ID" }
      }
    },
    "PublicSubnet3": {
      "Description": "A reference to the public subnet in the 3rd Availability Zone",
      "Value": {
        "Ref": "PrivateSubnet1"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-PublicSubnet3ID" }
      }
    },
    "PublicSubnet4": {
      "Description": "A reference to the public subnet in the 4th Availability Zone",
      "Value": {
        "Ref": "PrivateSubnet2"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-PublicSubnet4ID" }
      }
    },
    "PrivateSubnet1": {
      "Description": "A private subnet name reference to the public subnet in the 3rd Availability Zone",
      "Value": {
        "Ref": "PrivateSubnet1"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-PrivateSubnet1ID" }
      }
    },
    "PrivateSubnet2": {
      "Description": "A private subnet name refrence to the public subnet in the 3rd Availability Zone",
      "Value": {
        "Ref": "PrivateSubnet2"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-PrivateSubnet2ID" }
      }
    },


    "PublicSubnet1AZ": {
      "Description": "A reference to the public subnet in the 1st Availability Zone",
      "Value": {
        "Fn::GetAtt" : "PublicSubnet1.AvailabilityZone"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-PublicSubnet1AZID" }
      }
    },
    "PublicSubnet2AZ": {
      "Description": "A reference to the public subnet in the 2nd Availability Zone",
      "Value": {
        "Fn::GetAtt" : "PublicSubnet2.AvailabilityZone"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-PublicSubnet2AZID" }
      }
    },
    "PublicSubnet3AZ": {
      "Description": "A reference to the public subnet in the 3rd Availability Zone",
      "Value": {
        "Fn::GetAtt" : "PrivateSubnet1.AvailabilityZone"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-PublicSubnet3AZID" }
      }
    },
    "PublicSubnet4AZ": {
      "Description": "A reference to the public subnet in the 4th Availability Zone",
      "Value": {
        "Fn::GetAtt" : "PrivateSubnet2.AvailabilityZone"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-PublicSubnet4AZID" }
      }
    },
    "PrivateSubnet1AZ": {
      "Description": "A private subnet name reference to the public subnet in the 3rd Availability Zone",
      "Value": {
        "Fn::GetAtt" : "PrivateSubnet1.AvailabilityZone"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-PrivateSubnet1AZID" }
      }
    },
    "PrivateSubnet2AZ": {
      "Description": "A private subnet name refrence to the public subnet in the 3rd Availability Zone",
      "Value": {
        "Fn::GetAtt" : "PrivateSubnet2.AvailabilityZone"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-PrivateSubnet2AZID" }
      }
    },


    "NoIngressSecurityGroup": {
      "Description": "Security group with no ingress rule",
      "Value": {
        "Ref": "NoIngressSecurityGroup"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-NoIngressSecurityGroup" }
      }
    },
    "AllTrafficSecurityGroup": {
      "Description": "Security group with all traffic allowed",
      "Value": {
        "Ref": "AllTrafficSecurityGroup"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-AllTrafficSecurityGroup" }
      }
    },
    "PublicRouteTable1": {
      "Description": "Public Route Table",
      "Value": {
        "Ref": "PublicRouteTable"
      },
      "Export": {
         "Name": { "Fn::Sub": "${AWS::StackName}-PublicRouteTable" }
      }
    }
  }
}